/**
 * 保险箱面板
 */
class SavePanel extends BaseAnmiatePanel
{ 
	public SaveTab:TabComponent;
	public saveBtn:eui.Button;
	public saveGoldGroup:eui.Group;
	public withdrawGroup:eui.Group;
	public modifyPwdGroup:eui.Group;
	public oldPwd: eui.Label;
	public newPwd:eui.Label;
	public againPwd:eui.Label;
	public saveCreatePwd:eui.Label;
	public saveAgainPwd:eui.Label;
	public addBtn:eui.Button;
	public subBtn:eui.Button;
	public static savePwd:number=555555;
	public static isVip:Boolean=true;
	public saveGoldHs:eui.HSlider;	
	public withdrawGoldHs:eui.HSlider;
	public currentGold:eui.Label;// 保险箱外当前的金币
	public saveGold:eui.Label;// 保险箱内的金币
    public withdrawSubBtn:eui.Button;
	public withdrawAddBtn:eui.Button;
	public withdrawPwd:eui.Label;
	public withdrawBtn:eui.Button;	
	public saveCount:eui.Label;// 存入数量	
	public withdrawCount:eui.Label;// 取出数量
	public scaleHs:number;// 滚动条刻度
   

	public constructor()
	{
		super();
		this.skinName = UISkinName.SavePanel;
	}
	protected onAwake(event: eui.UIEvent)
	{
		super.onAwake(event);
		let array:Array<eui.Group>=new Array<eui.Group>();		
		array.push(this.saveGoldGroup);
        array.push(this.withdrawGroup);
        array.push(this.modifyPwdGroup);
        this.SaveTab.init(array); 	
		// todo
		this.currentGold.text="123342";
		this.saveGold.text="500000";
	}
	public init(appendData: any)
	{
		super.init(appendData);
		// 滚动条刻度
		if (parseInt(this.currentGold.text)>=10000){
           this.scaleHs=Math.floor(parseInt(this.currentGold.text)/10000);		
		}else{
		   this.scaleHs=0;
		}	
		this.saveGoldHs.value=0;
		this.saveGoldHs.maximum = this.scaleHs;
		
	}
	protected onRender(event: egret.Event)
	{
		super.onRender(event);
	}
	protected onEnable(event: eui.UIEvent): void
	{
		super.onEnable(event);
		this.saveGoldHs.addEventListener(egret.Event.CHANGE,this. importGoldHandler,this);
		this.saveGoldHs.addEventListener(eui.UIEvent.CHANGE_START,this.unEnoughGold,this);
		this.saveBtn.addEventListener(egret.TouchEvent.TOUCH_TAP,this.saveGoldHandler,this);	
		this.addBtn.addEventListener(egret.TouchEvent.TOUCH_TAP,this.saveGoldBtn,this);
		this.subBtn.addEventListener(egret.TouchEvent.TOUCH_TAP,this.saveGoldBtn,this);
	}
	protected onDisable(event: eui.UIEvent): void
	{
		super.onDisable(event);
		this.saveGoldHs.removeEventListener(egret.Event.CHANGE,this. importGoldHandler,this);
		this.saveGoldHs.removeEventListener(eui.UIEvent.CHANGE_START,this.unEnoughGold,this);
		this.saveBtn.removeEventListener(egret.TouchEvent.TOUCH_TAP,this.saveGoldHandler,this);
	}
	/** 
	 * 滑动金币滚动条
	*/
	private importGoldHandler()
	{
	   this.saveCount.text=(this.saveGoldHs.value).toString()+"万";
	}

     /**
	  * 存入金币
	 */
	private saveGoldHandler(){
		if(parseInt(this.saveCount.text)!=0){
			// 保险箱金币
			this.saveGold.text=((parseInt(this.saveCount.text)+parseInt(this.saveGold.text)/10000)*10000).toString();		
			//当前金币数
			this.currentGold.text=(parseInt(this.currentGold.text)-parseInt(this.saveCount.text)*10000).toString();
			//重置
			this.saveGoldHs.value=0;
			this.saveCount.text="0万";
			//重置刻度盘
			this.scaleHs=Math.floor(parseInt(this.currentGold.text)/10000);
			this.saveGoldHs.maximum = this.scaleHs;
			UIManager.showFloatTips("存入成功");
		}else{
            UIManager.showFloatTips("不能存入0");
		}			
	}
	/**
	  * 金币不足
	 */
	protected unEnoughGold(){
		if(this.saveGoldHs.maximum==0){
            UIManager.showFloatTips("金额不足一万");
		}
	}
	/**
	  * 点击金币加减按钮
	 */
    protected saveGoldBtn(event: egret.TouchEvent){
		switch (event.target){
			case this.addBtn:
			this.saveGoldHs.value++;
			break;
			case this.subBtn:
			this.saveGoldHs.value--;
			break;
			case this.withdrawAddBtn:
			this.withdrawGoldHs.value++;
			break;
			case this.withdrawSubBtn:
			this.withdrawGoldHs.value--;
			break;
		}

		if(this.saveGoldHs.value>this.saveGoldHs.maximum){
	        this.saveGoldHs.value=this.saveGoldHs.maximum;
			
		}else if(this.saveGoldHs.value<0){
			this.saveGoldHs.value=0
		}
		this.saveCount.text=(this.saveGoldHs.value).toString();
		this.importGoldHandler()
	}
	
}