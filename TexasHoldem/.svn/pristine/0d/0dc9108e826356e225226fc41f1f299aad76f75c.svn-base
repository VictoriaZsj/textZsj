/**
 * 加入房间面板
 */
class JoinInRoomPanel extends BasePanel
{
	public btnGroup: eui.Group;
	public numBtn0: eui.Button;
	public numBtn1: eui.Button;
	public numBtn2: eui.Button;
	public numBtn3: eui.Button;
	public numBtn4: eui.Button;
	public numBtn5: eui.Button;
	public numBtn6: eui.Button;
	public numBtn7: eui.Button;
	public numBtn8: eui.Button;
	public numBtn9: eui.Button;

	public reLoseBtn: eui.Button;
	public delBtn: eui.Button;

	public labelGroup: eui.Group;

	public label1: NumComponent;
	public label2: NumComponent;
	public label3: NumComponent;
	public label4: NumComponent;
	public label5: NumComponent;
	public label6: NumComponent;

	private _labelList: Array<NumComponent>;
	private _btnList: Array<eui.Button>;

	public constructor()
	{
		super();
		for (let i: number = 1; i <= 6; i++)
		{
			this["label" + i.toString()] = new NumComponent();
		}
		this.skinName = UISkinName.JoinInRoomPanel;
	}
	protected onAwake(event: eui.UIEvent)
	{
		super.onAwake(event);
		this._labelList = new Array<NumComponent>();
		for (let i: number = 1; i <= 6; i++)
		{
			this._labelList.push(this["label" + i.toString()]);
			this.labelGroup.addChild(this["label" + i.toString()]);
		}
		this._btnList = new Array<eui.Button>();
		for (let i: number = 0; i <= 9; i++)
		{
			this._btnList.push(this["numBtn" + i.toString()]);
		}
		// this.btnGroup.cacheAsBitmap = true;
		// let ly: eui.TileLayout = UIUtil.getTileLayout(-1, -8, undefined, 3);
		// this.btnGroup.layout = ly;
	}
	protected onRender(event: egret.Event)
	{
		super.onRender(event);
		this.resetLabel();
	}
	private resetLabel()
	{
		for (let childLabel of this._labelList)
		{
			childLabel.refresh();
		}
	}
	protected onEnable(event: eui.UIEvent): void
	{
		super.onEnable(event);
		this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClickHandler, this);
		RoomManager.reqJoinRoomEA.addListener(this.onJoinRoomResult, this);
	}
	protected onDisable(event: eui.UIEvent): void
	{
		super.onDisable(event);
		this.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onClickHandler, this);
		RoomManager.reqJoinRoomEA.removeListener(this.onJoinRoomResult);
	}
	private onClickHandler(event: egret.TouchEvent)
	{
		SoundManager.playButtonEffect(event.target);
		let index: number = this._btnList.indexOf(event.target);
		if (index >= 0)
		{
			let label: NumComponent = this.getUnWriteLabel();
			if (label)
			{
				label.refresh(index);
				this.tryJoinRoom(false);
			}
		}
		else
		{
			switch (event.target)
			{
				case this.reLoseBtn:
					this.resetLabel();
					break;
				case this.delBtn:
					let delLabel: NumComponent = this.getWirteLabel();
					if (delLabel)
					{
						delLabel.refresh();
					}
					break;
			}
		}
	}
	private tryJoinRoom(isShowAlert: boolean)
	{
		if (this.getUnWriteLabel() && isShowAlert)
		{
			UIManager.showFloatTips("房间号码位数不对！");
			return;
		}
		let str: string = this.getRoomNum();
		if (str.length > 5)
		{
			let roomId: number = parseInt(str);
			if (roomId <= 0 || roomId.toString().length < 6)
			{
				UIManager.showFloatTips("房间号码不对！");
				return;
			}
			RoomManager.reqJoinRoom(roomId, SocketManager.requestSessionMax);
		}
	}
	private getUnWriteLabel(): NumComponent
	{
		let label: NumComponent;
		for (let i: number = 0; i < this._labelList.length; i++)
		{
			label = this._labelList[i];
			if (label.label1 && !label.label1.text)
			{
				return label;
			}
		}
		return null;
	}
	private getWirteLabel(): NumComponent
	{
		let label: NumComponent;
		for (let i: number = this._labelList.length - 1; i >= 0; i--)
		{
			label = this._labelList[i];
			if (label.label1 && label.label1.text)
			{
				return label;
			}
		}
		return null;
	}
	private getRoomNum()
	{
		let str: string = StringConstant.empty;
		for (let i: number = 0; i < this._labelList.length; i++)
		{
			str += this._labelList[i].label1.text;
		}
		return str;
	}
	private onJoinRoomResult()
	{
		if (RoomManager.roomInfo) //todo
		{
			UIManager.showFloatTips(StringUtil.format("加入房间成功！房间号：{0}", RoomManager.roomInfo.roomId));
			SceneManager.goToGame(true);
		}
		this.onCloseBtnClickHandler(null);
	}
}