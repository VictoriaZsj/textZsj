/**
 * 游戏场面板
 */
class PlayingFieldPanel extends BackHomeAnimePanel
{
    /**
     * 房间ID
    */
    private roomIdLable: eui.Label;
    /**
     * 在玩人数
    */
    private playerNumLable: eui.Label;
    /**
     * 小大盲
    */
    private blindLable: eui.Label;
    /**
     * 最小最大买入
    */
    private buyLable: eui.Label;
    /**
     * 创建私人房按钮
    */
    private createPrivateRoomBtn: eui.Button;
    /**
     * 关闭私人房输入密码按钮
    */
    private closePrivateRoomGroupBtn: eui.Button;
    /**
     * 开始游戏按钮
    */
    private startGameBtn: eui.Button;
    /**
     * 选项卡内容group
    */
    private tabGroup: eui.Group;

    private scroller: eui.Scroller;
    private list: eui.List;
    private _dp: eui.ArrayCollection;
    private _ly: eui.TileLayout;
    private roomInfoList: Array<PlayingFieldRoomInfo>;
    public playingFieldTabCompontent: TabComponent;

    /**
     * 升降序排序标记
    */
    private blindIsUpSort: boolean = true;
    private playNumIsUpSort: boolean = true;
    private roomIdIsUpSort: boolean = true;
    private buyIsUpSort: boolean = true;
    /**
     * 搜索框
    */
    private searchLable: eui.EditableText;

    public constructor()
    {
        super();
        this.skinName = UISkinName.PlayingFieldPanel;
    }
    protected onAwake(event: eui.UIEvent)
    {
        super.onAwake(event);
        this._ly = UIUtil.getVTileLayout(1, 1, egret.VerticalAlign.TOP);
        this.list.layout = this._ly;
        UIUtil.listRenderer(this.list, this.scroller, PlayingFieldItemRenderer, ScrollViewDirection.Vertical_T_D, eui.ScrollPolicy.ON, null, true);
        this.scroller.scrollPolicyH = eui.ScrollPolicy.OFF;
        this.searchLable.type = egret.TextFieldType.INPUT;
        this.playingFieldTabCompontent.init(["初级场", "中级场", "高级场"]);
    }
    protected onRender(event: egret.Event)
    {
        super.onRender(event);
        //重置
        this.searchLable.text = "";
        this.roomInfoList = new Array<PlayingFieldRoomInfo>();
        PlayingFieldManager.reqRoomListInfo(PlayingFieldPattern.PrimaryPattern);
    }
    protected onEnable(event: eui.UIEvent): void
    {
        super.onEnable(event);
        this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.clickHandler, this);
        this.list.addEventListener(eui.ItemTapEvent.ITEM_TAP, this.onRoomClickHandler, this);
        this.searchLable.addEventListener(egret.TouchEvent.FOCUS_IN, this.showKeyboard, this);
        this.playingFieldTabCompontent.tabBar.addEventListener(eui.ItemTapEvent.ITEM_TAP, this.onTabClickHandler, this);
        PlayingFieldManager.onGetRoomListEvent.addListener(this.setRoomListInfo, this);
    }
    protected onDisable(event: eui.UIEvent): void
    {
        super.onDisable(event);
        this.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.clickHandler, this);
        this.list.removeEventListener(eui.ItemTapEvent.ITEM_TAP, this.onRoomClickHandler, this);
        this.searchLable.removeEventListener(egret.TouchEvent.FOCUS_IN, this.showKeyboard, this);
        this.playingFieldTabCompontent.tabBar.removeEventListener(eui.ItemTapEvent.ITEM_TAP, this.onTabClickHandler, this);
        PlayingFieldManager.onGetRoomListEvent.removeListener(this.setRoomListInfo);
    }
    /**
     * tabBar切换事件
    */
    private onTabClickHandler(e: eui.ItemTapEvent): void
    {
        if (e.itemIndex == 0)
        {
            PlayingFieldManager.reqRoomListInfo(PlayingFieldPattern.PrimaryPattern);
        } else if (e.itemIndex == 1)
        {
            PlayingFieldManager.reqRoomListInfo(PlayingFieldPattern.MiddlePattern);
        } else
        {
            PlayingFieldManager.reqRoomListInfo(PlayingFieldPattern.HighPattern);
        }
    }
    /**
     * 写入列表默认数据
    */
    private setRoomListInfo()
    {
        if (PlayingFieldManager.roomList.length > 0)
        {
            ArrayUtil.Clear(this.roomInfoList);
            for (let def of PlayingFieldManager.roomList)
            {
                this.roomInfoList.push(def);
            }
        }
        this._dp = new eui.ArrayCollection(this.roomInfoList.sort(SortUtil.blindUpSort));  //默认盲注升序排序
        this.list.dataProvider = this._dp;
    }

    /**
     * 搜索框获得焦点触发的操作
    */
    private showKeyboard()
    {
        UIManager.showPanel(UIModuleName.KeyBoardPanel, { callback: this.searchRoom, target: this });
    }
    /**
     * 点击房间ID触发的操作
    */
    private roomIdSort()
    {
        if (this.roomIdIsUpSort)
        {
            this._dp = new eui.ArrayCollection(this.roomInfoList.sort(SortUtil.roomIdUpSort));
        } else
        {
            this._dp = new eui.ArrayCollection(this.roomInfoList.sort(SortUtil.roomIdDownSort));
        }
        this.roomIdIsUpSort = !this.roomIdIsUpSort;
        this.refreshUI();
    }
    /**
     * 点击在玩人数触发的操作
    */
    private playerNumSort()
    {
        if (this.playNumIsUpSort)
        {
            this._dp = new eui.ArrayCollection(this.roomInfoList.sort(SortUtil.roomPlayNumUpSort));
        } else
        {
            this._dp = new eui.ArrayCollection(this.roomInfoList.sort(SortUtil.roomPlayNumDownSort));
        }
        this.playNumIsUpSort = !this.playNumIsUpSort;
        this.refreshUI();
    }
    /**
     * 点击小、大盲注触发的操作
    */
    private blindSort()
    {
        if (this.blindIsUpSort)
        {
            this._dp = new eui.ArrayCollection(this.roomInfoList.sort(SortUtil.blindUpSort));
        } else
        {
            this._dp = new eui.ArrayCollection(this.roomInfoList.sort(SortUtil.blindDownSort));
        }
        this.blindIsUpSort = !this.blindIsUpSort;
        this.refreshUI();
    }
    /**
     * 点击最小、最大买入触发的操作
    */
    private buySort()
    {
        if (this.buyIsUpSort)
        {
            this._dp = new eui.ArrayCollection(this.roomInfoList.sort(SortUtil.blindUpSort));
        } else
        {
            this._dp = new eui.ArrayCollection(this.roomInfoList.sort(SortUtil.blindDownSort));
        }
        this.buyIsUpSort = !this.buyIsUpSort;
        this.refreshUI();
    }
    /**
     * 刷新页面
    */
    private refreshUI()
    {
        this.list.dataProvider = this._dp;
    }
    /**
     * 面板按钮事件处理
    */
    private clickHandler(event: egret.TouchEvent)
    {
        switch (event.target)
        {
            case this.roomIdLable:
                SoundManager.playEffect(Sex.Male, MusicAction.buttonClick);
                this.roomIdSort();
                break;
            case this.playerNumLable:
                SoundManager.playEffect(Sex.Male, MusicAction.buttonClick);
                this.playerNumSort();
                break;
            case this.blindLable:
                SoundManager.playEffect(Sex.Male, MusicAction.buttonClick);
                this.blindSort();
                break;
            case this.buyLable:
                SoundManager.playEffect(Sex.Male, MusicAction.buttonClick);
                this.buySort();
                break;
            case this.startGameBtn:
                SoundManager.playEffect(Sex.Male, MusicAction.buttonClick);
                // todo 开始游戏
                UIManager.showFloatTips("快速加入游戏");
                break;
            case this.createPrivateRoomBtn:
                SoundManager.playEffect(Sex.Male, MusicAction.buttonClick);
                this.createPrivateRoom();
                break;
        }
    }
    /**
     * 创建私人房
    */
    private createPrivateRoom()
    {
        //判断是不是vip,来确定是否具有创建私人房的权限
        if (!VipManager.isVip())
        {
            AlertManager.showDoubleAlert("私人房仅对VIP开放，您现在还不是VIP，是否马上开通？", this.openShoppingPanel);
        } else
        {
            UIManager.showPanel(UIModuleName.CreateRoomPwdPanel);
        }
    }
    /**
     * 搜索房间
    */
    private searchRoom(type: number, num?: string)
    {
        if (type == 1)
        {
            if (this.searchLable.text.length < 5)
            {
                this.searchLable.text = this.searchLable.text + num;
            }
        } else if (type == 2)
        {
            if (this.searchLable.text.length > 0)
            {
                this.searchLable.text = this.searchLable.text.slice(0, this.searchLable.text.length - 1);
            }
        } else if (type == 3)
        {
            this.searchLable.text = "";
        } else if (type == 4)
        {
            return;
        } else
        {
            return;
        }
        let str: string = this.searchLable.text;
        if (str.length > 0)
        {
            let result: Array<PlayingFieldRoomInfo> = new Array<PlayingFieldRoomInfo>();
            if (PlayingFieldManager.roomList.length > 0)
            {
                for (let def of PlayingFieldManager.roomList)
                {
                    if ((Array(5).join('0') + def.id).slice(-5).toString().indexOf(str) >= 0)
                    {
                        result.push(def);
                    }
                }
                this._dp = new eui.ArrayCollection(result.sort(SortUtil.blindUpSort));
            }
        } else
        {
            this._dp = new eui.ArrayCollection(this.roomInfoList.sort(SortUtil.blindUpSort));
        }
        this.refreshUI();
    }
    /**
     * 房间信息列表点击触发事件
    */
    private onRoomClickHandler(event: egret.TouchEvent)
    {
        SoundManager.playEffect(Sex.Male, MusicAction.buttonClick);
        if (this.list.selectedItem)
        {
            if (UserManager.userInfo.gold >= this.list.selectedItem.minBuy)
            {
                if (this.list.selectedItem.type == 11)
                {
                    PlayingFieldManager.roomId = this.list.selectedItem.id;
                    UIManager.showPanel(UIModuleName.EnterRoomPwdPanel);
                } else
                {
                    //进入房间
                    UIManager.showFloatTips("发送加入房间请求" + this.list.selectedItem.id);  //todo 测试代码
                }
            } else
            {
                AlertManager.showDoubleAlert("提示：金币不足，是否花费648购买1200万金币？", this.openShoppingPanel);
            }
        }
    }
    /**
     * 打开商城面板
    */
    private openShoppingPanel()
    {
        UIManager.showPanel(UIModuleName.ShoppingPanel);
        UIManager.closePanel(UIModuleName.PlayingFieldPanel);
    }
}