/**
 * 邀请好友面板
 */
class InviteFriendPanel extends BackHomeAnimePanel
{
	public InviteFriendGroup: eui.Group;
	public InviteFriend_scroller: eui.Scroller;
	public InviteFriendList: eui.List;
	public _dp: eui.ArrayCollection;
	public InviteBtn: eui.Button;
	public checkAll: eui.CheckBox;

	public constructor()
	{
		super();
		this.skinName = UISkinName.InviteFriendPanel;
	}
	protected onAwake(event: eui.UIEvent)
	{
		super.onAwake(event);
		UIUtil.listRenderer(this.InviteFriendList, this.InviteFriend_scroller, InviteFriendListItemRenderer, ScrollViewDirection.Vertical_T_D, eui.ScrollPolicy.ON, null, true);
	}
	public init(appendData: any)
	{
		super.init(appendData);
	}
	protected onRender(event: egret.Event)
	{
		super.onRender(event);
		this.setFriendListInfo();
	}
	protected onEnable(event: eui.UIEvent): void
	{
		super.onEnable(event);
		this.checkAll.addEventListener(egret.Event.CHANGE, this.checkAllHandler, this)
		this.InviteFriendList.addEventListener(eui.ItemTapEvent.ITEM_TAP, this.checkBtnHandler, this);
	}
	protected onDisable(event: eui.UIEvent): void
	{
		super.onDisable(event);
	}
	protected setFriendListInfo()
	{
		if (FriendManager.friendList && FriendManager.friendList.length > 0)
		{
			this._dp = new eui.ArrayCollection(FriendManager.friendList);
			this.InviteFriendList.dataProvider = this._dp;
		}
	}
	public checkAllHandler()
	{
		if (FriendManager.friendList && FriendManager.friendList.length > 0)
		{
			for (let i = 0; i < FriendManager.friendList.length; i++)
			{
				let inviteFriendListItem = this.InviteFriendList.getChildAt(i) as InviteFriendListItemRenderer;
				if (this.checkAll.selected == true && inviteFriendListItem.isCheckedBtn.selected == false)
				{
					inviteFriendListItem.isCheckedBtn.selected = true;
				}
			}
		}
	}
	public checkBtnHandler(e: eui.ItemTapEvent)
	{

	}
}