/**
 * 加注面板
 */
class AddChipsPanel extends BasePanel
{
	public addChipsHs: eui.HSlider;
	public countLable: eui.Label;
	public allInValue: number;

	public constructor()
	{
		super();
		this.skinName = UISkinName.AddChipsPanel;
	}
	protected onAwake(event: eui.UIEvent)
	{
		super.onAwake(event);
		this.isMaskClickClose = true;

	}
	public init(appendData: any)
	{
		super.init(appendData);
		//设置存入滑动条进度
		this.allInValue = appendData.maximum;
		this.addChipsHs.value = appendData.followChips;
		this.countLable.text = this.addChipsHs.value.toString();
		this.addChipsHs.minimum = appendData.followChips;
		this.addChipsHs.maximum = appendData.maximum
		//每次滚动最小刻度数
		this.addChipsHs.snapInterval = appendData.perChips;
	}
	protected onRender(event: egret.Event)
	{
		super.onRender(event);
	}
	protected onEnable(event: eui.UIEvent): void
	{
		super.onEnable(event);
		this.addChipsHs.addEventListener(egret.Event.CHANGE, this.addChipsHandle, this);
		this.addChipsHs.thumb.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.confirmAddChips, this);
		this.addChipsHs.thumb.addEventListener(egret.TouchEvent.TOUCH_END, this.confirmAddChips, this);
	}
	protected onDisable(event: eui.UIEvent): void
	{
		super.onDisable(event);
	}
	/**
	 * 加注变化
	*/
	private addChipsHandle()
	{
		this.countLable.text = this.addChipsHs.value.toString();
		this.countLable.y = this.addChipsHs.thumb.x;
		console.log("滚动最大值" + this.addChipsHs.maximum)
	}
	private _posX: number;
	private _posY: number;
	/**
	 * 确定加注
	*/
	public confirmAddChips(event: egret.TouchEvent)
	{
		switch (event.type)
		{
			case egret.TouchEvent.TOUCH_BEGIN:
				this._posX = event.stageX;
				this._posY = event.stageY;
				break;
			case egret.TouchEvent.TOUCH_END:
				if (event.stageX == this._posX && event.stageY == this._posY)
				{
					UIManager.closePanel(this);
					// this.addChipsHs.value  拿到加注值
				}
			break;
		}
	}
}