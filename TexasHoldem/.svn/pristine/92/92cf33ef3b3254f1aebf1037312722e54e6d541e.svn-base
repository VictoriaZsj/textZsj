class MathUtil
{
	// Obtient une valeur comprise dans un interval
	public static clamp(value, min, max): number
	{
		if (value < min)
		{
			return min;
		}
		else if (value > max)
		{
			return max;
		}
		return value;
	};
	// Obtient une interpolation linéaire entre 2 valeurs
	public static lerp(value1, value2, amount): number
	{
		amount = amount < 0 ? 0 : amount;
		amount = amount > 1 ? 1 : amount;
		return value1 + (value2 - value1) * amount;
	}
	/**
	 * 获取一个随机值含头尾
	 */
	public static getRandom(start: number, end: number): number
	{
		return Math.round(Math.random() * (end - start)) + start;
	}
	/**
	 * 将大于一万的数转换为数字加“万”或“亿”
	*/
	public static formatNum(num: number): string
	{
		let str: string;
		if(num < 10000){
			str = num.toString();
			return str;
		}
		if (num >= 10000 && num < 100000000)
		{
			str= (num / 10000).toFixed(0).toString() + "万";
			return str;
		}
		if(num >= 100000000){
			str = (num / 100000000).toFixed(0).toString() + "亿";
			return str; 
		}
	}
}