/**
 * 好友管理
*/
class FriendManager
{
    /**
     * 好友信息列表
    */
    public static friendList: Array<FriendInfo>;
    /**
     * 好友请求列表
    */
    public static requestFriendList:Array<FriendInfo>;
    /**
     * 礼物列表
    */
    public static giftList: Array<FriendInfo>;
    /**
     * 正在被领取礼物的好友的id
    */
    public static friendId: number;
    /**
     * 正在被进行是否接受好友请求的好友的id
    */
    public static requestFriendId: number;
    /**
	 * 发送好友列表信息获取请求
	 */
    public static reqFriendListInfo()
    {
        //todo 协议待添加
        SocketManager.AddCommandListener(Command.Req_BindId_3025, FriendManager.FriendListInfoResponse);
        SocketManager.Send(Command.Req_BindId_3025);
    }
    public static FriendListInfoResponse(result: SpRpcResult)
    {
        SocketManager.RemoveCommandListener(Command.Req_BindId_3025, FriendManager.FriendListInfoResponse);
        if (result.data)
        {
            if (!FriendManager.friendList)
            {
                FriendManager.friendList = new Array<FriendInfo>();
            }
            FriendManager.friendList = result.data["friendList"];
        }
        FriendManager.onGetFriendListEa.dispatch();
    }
    /**
     * 发送赠送好友金币请求
    */
    public static reqGiveFriendGold(id: number)
    {
        //todo 协议待添加
        SocketManager.AddCommandListener(Command.Req_BindId_3025, FriendManager.GiveFriendGoldResponse);
        SocketManager.Send(Command.Req_BindId_3025);
    }
    public static GiveFriendGoldResponse(result: SpRpcResult)
    {
        SocketManager.RemoveCommandListener(Command.Req_BindId_3025, FriendManager.GiveFriendGoldResponse);
        FriendManager.onGiveFriendGoldEa.dispatch();
    }
    /**
     * 发送获取好友详请请求
    */
    public static reqGetFriendDetailInfo(id: number)
    {
        //todo 协议待添加
        SocketManager.AddCommandListener(Command.Req_BindId_3025, FriendManager.GetFriendDetailInfoResponse);
        SocketManager.Send(Command.Req_BindId_3025);
    }
    public static GetFriendDetailInfoResponse(result: SpRpcResult)
    {
        SocketManager.RemoveCommandListener(Command.Req_BindId_3025, FriendManager.GetFriendDetailInfoResponse);
        // todo 在此写入数据  具体待定
        // UserManager.otherUserInfo = result.data;
        FriendManager.onGetFriendDetailInfoEa.dispatch();
    }
    /**
     * 发送领取好友赠送的金币请求
    */
    public static reqReceiveGift(id: number)
    {
        //todo 协议待添加
        SocketManager.AddCommandListener(Command.Req_BindId_3025, FriendManager.ReceiveGiftResponse);
        SocketManager.Send(Command.Req_BindId_3025);
    }
    public static ReceiveGiftResponse(result: SpRpcResult)
    {
        SocketManager.RemoveCommandListener(Command.Req_BindId_3025, FriendManager.ReceiveGiftResponse);
        FriendManager.onReceiveGiftEa.dispatch();
    }

    /**
	 * 请求房间列表成功广播
	 */
    public static onGetFriendListEa: ActionDispatcher = new ActionDispatcher();
    /**
     * 赠送好友金币成功广播
    */
    public static onGiveFriendGoldEa: ActionDispatcher = new ActionDispatcher();
    /**
     * 获取好友详细信息成功广播
    */
    public static onGetFriendDetailInfoEa: ActionDispatcher = new ActionDispatcher();
    /**
     * 领取好友赠送的礼物成功广播
    */
    public static onReceiveGiftEa: ActionDispatcher = new ActionDispatcher();
}
class FriendInfo
{
    /**
     * ID
    */
    public id: number;
    /**
     * 头像
    */
    public headImg: string;
    /**
     * 名字
    */
    public name: string;
    /**
     * 金币数量
    */
    public glodNum: number;
    /**
     * 是否在线
    */
    public isOnline: number;
    /**
     * 是否已经赠送过金币
    */
    public isHadGiven: number;
    /**
     * 是否可以领取金币
    */
    public isCanGet: number;
}