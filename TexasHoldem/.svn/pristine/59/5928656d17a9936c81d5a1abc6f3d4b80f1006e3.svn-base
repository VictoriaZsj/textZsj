/**
 *房间信息
*/
class RoomDefined extends BaseDefined<RoomDefinition>
{
    public static readonly forbiddenConfig: string = "room";
    private static _instance: RoomDefined;
    public static GetInstance(): RoomDefined
    {
        if (!RoomDefined._instance)
        {
            RoomDefined._instance = new RoomDefined();
        }
        if (DefinedManager.IsParsed(RoomDefined.forbiddenConfig) == false)
        {
            RoomDefined._instance.initialize();
        }
        return RoomDefined._instance;
    }
    public initialize()
    {
        let obj: Object = DefinedManager.GetData(RoomDefined.forbiddenConfig);
        this.dataList = ShortNameDefined.GetInstance().convertEnter(obj) as Array<RoomDefinition>;
    }
    public getBlindInfoById(id: number): RoomDefinition
    {
        for (let def of this.dataList)
        {
            if (def.id == id)
            {
                return def;
            }
        }
        return;
    }
}
/**
* 盲注信息定义
*/
class RoomDefinition implements IBaseDefintion
{
    /**
     * ID
    */
    public id: number;
    /**
     * 游戏场类型
    */
    public type: number;
    /**
     * 小盲注
    */
    public sBlind: number;
    /**
     * 大盲注
    */
    public bBlind: number;
    /**
     * 最小买入
    */
    public sBuyin: number;
    /**
     * 最大买入
    */
    public bBuyin: number;
    /**
     * 税
    */
    public tax: number;
    /**
     * 座位
     */
    public seat: number;
}