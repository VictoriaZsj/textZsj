/**
 * 事件派发器
 */
class ActionDispatcher
{
    private _list: Array<ActionFunction> = new Array<ActionFunction>();
	/**
	 * 销毁
	 */
	public destroy()
	{
		this._list = null;
	}
    /**
     * 清空
     */
	public clear()
	{
		this._list.length = 0;
	}
	/**
	 * 已添加回调侦听的数量
	 */
	public get count(): number
	{
		return this._list.length;
	}
	/**
	 * 添加呼叫回调侦听(自动过滤重复的方法)
	 */
	public addListener(listener: Function, thisObject: any)
	{
		for (let item of this._list)
        {
            if (item.func == listener && item.thisObject == thisObject)
            {
                return;
            }
        }
		let af:ActionFunction = new ActionFunction();
		af.thisObject = thisObject;
		af.func = listener;
        this._list.push(af);
	}
	/**
	 * 移除呼叫回调
	 */
	public removeListener(listener: Function, thisObject: any)
	{
		let af:ActionFunction;
		let length:number = this._list.length;
        for (let i: number = 0; i < length; i++)
        {
            af = this._list[i];
            if (af.func == listener && af.thisObject == thisObject)
            {
                this._list.splice(i, 1);
                break;
            }
        }
	}
	/**
	 * 广播呼叫回调
	 */
	public dispatch(data?:any)
	{
		let count = this._list.length;
        let af:ActionFunction;
        for (let i: number = 0; i < this._list.length; i++)
        {
            af = this._list[i];
			FuncUtil.invoke(af.func, af.thisObject, data);
            if (this._list.length < count)
            {
                i -= (count - this._list.length);
            }
        }
	}
}