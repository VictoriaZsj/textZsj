/**
 * 游戏大厅界面
 */
class GameHallPanel extends BasePanel
{
	//用户信息
	public userImg: eui.Image;//头像
	public borderImg: eui.Image;//边框
	public userNameLabel: eui.Label;//用户名
	public vipLevelLabel: eui.Label;//用户vip等级
	public diamondNumLabel: eui.Label;//钻石数
	public addDiamondBtn: eui.Button;//添加钻石
	public goldNumLabel: eui.Label;//金币数量
	public addGoldBtn: eui.Button;//添加金币
	public kanbanImg: eui.Image;

	//排名
	public rankingImg0: eui.Image;
	public rankingImg1: eui.Image;
	public rankingImg2: eui.Image;
	public rankingImg3: eui.Image;

	//右侧按钮
	public signBtn: eui.Button;//签到
	public activityBtn: eui.Button;//活动
	public mailBtn: eui.Button;//邮件
	public newMail: eui.Image;//新邮件提醒

	//游戏按钮
	public pokerBtn: eui.Button;//德州扑克
	public matchBtn: eui.Button;//赛事场
	public hundredBattle: eui.Button;//百人大战

	//下方菜单
	public shopBtn: eui.Button;//商城
	public friendBtn: eui.Button;//好友
	public questBtn: eui.Button;//任务
	public moreBtn: eui.Button;//更多
	public freeGoldBtn: eui.Button;//免费金币

	public moreGroup: eui.Group;//更多组
	public moreBg: eui.Image;//背景
	public safeBoxBtn: eui.Button;//保险箱
	public gameRuleBtn: eui.Button;//玩法
	public settingBtn: eui.Button;//设置

	//组
	public ranking: eui.Group;
	public rightMenu: eui.Group;
	public bottomButton: eui.Group;
	public gameButton: eui.Group;
	public userinfoGroup: eui.Group;

	private animeList: Array<egret.Tween> = new Array<egret.Tween>();

	public constructor()
	{
		super();
		this.setGrayMask(false);
		this.skinName = UISkinName.GameHallPanel;
	}
	protected onAwake(event: eui.UIEvent)
	{
		super.onAwake(event);
		this.moreGroup.visible = false;
	}
	public init(appendData: any)
	{
		super.init(appendData);
		this.refreshUserInfoUI();
		this.refreshNewMail();
		if (!UserManager.userInfo.name || UserManager.userInfo.name.length <= 0)
		{
			this.showCreateRolePanel();
		}
	}

	protected onRender(event: egret.Event)
	{
		super.onRender(event);
	}
	private refreshUserInfoUI()
	{
		this.userNameLabel.text = UserManager.userInfo.name.toString();
		if (VipManager.isVip())
		{
			this.vipLevelLabel.text = "VIP" + UserManager.userInfo.vipLevel;
			this.vipLevelLabel.visible = true;
		}
		else
		{
			this.vipLevelLabel.visible = false;
		}
		this.refreshGold();
	}

	/**
	 * 刷新财产信息
	 */
	private refreshGold(num?: number)
	{
		this.goldNumLabel.text = MathUtil.formatNum(UserManager.userInfo.gold);
		this.diamondNumLabel.text = MathUtil.formatNum(UserManager.userInfo.diamond);
	}
	/**
	 * 刷新新邮件通知
	 */
	private refreshNewMail()
	{
		if (MailManager.unReadCount > 0)
		{
			this.newMail.visible = true;
		}
		else
		{
			this.newMail.visible = false;
		}
	}

	protected onEnable(event: eui.UIEvent): void
	{
		super.onEnable(event);
		this.setEnterAnime();
		this.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClickHandler, this);
		VipManager.vipUpgradeEvent.addListener(this.refreshUserInfoUI, this);
		MailManager.haveNewMailEvent.addListener(this.refreshNewMail, this);
		UserManager.propertyChangeEvent.addListener(this.refreshGold, this);
	}
	protected onDisable(event: eui.UIEvent): void
	{
		super.onDisable(event);
		this.setOutAnime();
		this.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.onClickHandler, this);
		VipManager.vipUpgradeEvent.removeListener(this.refreshUserInfoUI);
		MailManager.haveNewMailEvent.removeListener(this.refreshNewMail);
		UserManager.propertyChangeEvent.removeListener(this.refreshGold);
	}
	private _txtDef: TextDefinition;
	protected onClickHandler(event: eui.UIEvent)
	{
		if (this.moreGroup.visible && event.target != this.moreBtn)
		{
			this.moreGroup.visible = false;
		}
		switch (event.target)
		{
			case this.borderImg:
				SoundManager.playEffect(Sex.Male, MusicAction.buttonClick);
				UIManager.showPanel(UIModuleName.UserInfoPanel);
				break;
			case this.addDiamondBtn:
				SoundManager.playEffect(Sex.Male, MusicAction.buttonClick);
				this.setOutAnime();
				UIManager.showPanel(UIModuleName.ShoppingPanel, { tab: 1 });
				break;
			case this.addGoldBtn:
				SoundManager.playEffect(Sex.Male, MusicAction.buttonClick);
				this.setOutAnime();
				UIManager.showPanel(UIModuleName.ShoppingPanel, { tab: 0 });
				break;
			case this.pokerBtn:
				SoundManager.playButtonEffect(event.target);
				if (RoomManager.isInRoom)
				{
					AlertManager.showDoubleAlert("你已加入有房间，是否确定进入？", this.goToGame.bind(this));
				}
				else
				{
					UIManager.showPanel(UIModuleName.PlayingFieldPanel);
				}
				break;
			case this.matchBtn:
				SoundManager.playButtonEffect(event.target);
				UIManager.showPanel(UIModuleName.MatchPanel);
				break;
			case this.hundredBattle:
				SoundManager.playButtonEffect(event.target);
				if (RoomManager.isInRoom)
				{
					AlertManager.showDoubleAlert("你已加入有房间，是否确定进入？", this.goToGame.bind(this));
				}
				else
				{
					UIManager.showPanel(UIModuleName.JoinInRoomPanel);
				}
				break;
			case this.signBtn:
				SoundManager.playEffect(Sex.Male, MusicAction.buttonClick);
				break;
			case this.activityBtn:
				SoundManager.playEffect(Sex.Male, MusicAction.buttonClick);
				break;
			case this.mailBtn:
				SoundManager.playEffect(Sex.Male, MusicAction.buttonClick);
				this.newMail.visible = false;
				UIManager.showPanel(UIModuleName.MailPanel);
				break;
			case this.shopBtn:
				SoundManager.playEffect(Sex.Male, MusicAction.buttonClick);
				this.setOutAnime();
				UIManager.showPanel(UIModuleName.ShoppingPanel);
				break;
			case this.friendBtn:
				SoundManager.playEffect(Sex.Male, MusicAction.buttonClick);
				this.setOutAnime();
				UIManager.showPanel(UIModuleName.FriendPanel);
				break;
			case this.questBtn:
				SoundManager.playEffect(Sex.Male, MusicAction.buttonClick);
				break;
			case this.moreBtn:
				SoundManager.playEffect(Sex.Male, MusicAction.buttonClick);
				this.moreGroup.visible = !this.moreGroup.visible;
				break;
			case this.freeGoldBtn:
				SoundManager.playEffect(Sex.Male, MusicAction.buttonClick);
				break;
			case this.safeBoxBtn:
				SoundManager.playEffect(Sex.Male, MusicAction.buttonClick);
				if (VipManager.isVip())
				{
					this.setOutAnime();
					UIManager.showPanel(UIModuleName.SavePanel);
				}
				else
				{
					AlertManager.showDoubleAlert("保险箱功能仅对VIP用户开放", this.goShoppingPanel.bind(this));
				}
				break;

			case this.gameRuleBtn:
				SoundManager.playEffect(Sex.Male, MusicAction.buttonClick);
				this.setOutAnime();
				UIManager.showPanel(UIModuleName.GameRulePanel);
				break;
			case this.settingBtn:
				SoundManager.playEffect(Sex.Male, MusicAction.buttonClick);
				this.setOutAnime();
				UIManager.showPanel(UIModuleName.SetPanel);
				break;
		}

	}
	private goToGame()
	{
		SceneManager.goToGame(false);
	}

	private setEnterAnime()
	{
		this.removeEnterAnime();
		this.userinfoGroup.y = -100;
		this.animeList.push(egret.Tween.get(this.userinfoGroup).to({ y: 0 }, 600, egret.Ease.backOut));
		this.rightMenu.x = 720;
		this.animeList.push(egret.Tween.get(this.rightMenu).to({ x: 570 }, 600, egret.Ease.backOut));
		this.ranking.x = -100;
		this.animeList.push(egret.Tween.get(this.ranking).to({ x: 0 }, 600, egret.Ease.backOut));
		this.gameButton.y = 1280;
		this.animeList.push(egret.Tween.get(this.gameButton).to({ y: 810 }, 800, egret.Ease.backOut));
		this.bottomButton.y = 1280;
		this.animeList.push(egret.Tween.get(this.bottomButton).to({ y: 1130 }, 600, egret.Ease.backOut));
		this.kanbanImg.alpha = 0;
		this.animeList.push(egret.Tween.get(this.kanbanImg).to({ alpha: 1 }, 200));
	}

	private setOutAnime()
	{
		this.removeEnterAnime();
		this.userinfoGroup.y = 0;
		this.animeList.push(egret.Tween.get(this.userinfoGroup).to({ y: -100 }, 600));
		this.rightMenu.x = 570;
		this.animeList.push(egret.Tween.get(this.rightMenu).to({ x: 720 }, 600));
		this.ranking.x = 0;
		this.animeList.push(egret.Tween.get(this.ranking).to({ x: -100 }, 600));
		this.gameButton.y = 810;
		this.animeList.push(egret.Tween.get(this.gameButton).to({ y: 1280 }, 800));
		this.bottomButton.y = 1130;
		this.animeList.push(egret.Tween.get(this.bottomButton).to({ y: 1280 }, 600));
		this.kanbanImg.alpha = 1;
		this.animeList.push(egret.Tween.get(this.kanbanImg).to({ alpha: 0 }, 200).call(this.onCloseAnmComplete, this));
	}
	private removeEnterAnime()
	{
		egret.Tween.removeTweens(this.userinfoGroup);
		egret.Tween.removeTweens(this.rightMenu);
		egret.Tween.removeTweens(this.ranking);
		egret.Tween.removeTweens(this.gameButton);
		egret.Tween.removeTweens(this.bottomButton);
		egret.Tween.removeTweens(this.kanbanImg);
	}
	protected onCloseAnmComplete()
	{
		UIManager.closePanel(this);
	}
	protected goShoppingPanel()
	{
		this.setOutAnime();
		UIManager.showPanel(UIModuleName.ShoppingPanel);
	}
	protected goSavePanel()
	{
		this.setOutAnime();
		UIManager.showPanel(UIModuleName.SavePanel);
	}
	/**
	 * 打开创建角色面板
	*/
	private showCreateRolePanel()
	{
		LoginManager.OnCreateRole.addListener(this.onCreateRoleComplete, this);
		UIManager.showPanel(UIModuleName.CreateRolePanel);
	}
	private onCreateRoleComplete()
	{
		LoginManager.OnCreateRole.removeListener(this.onCreateRoleComplete);
		UIManager.closePanel(UIModuleName.CreateRolePanel);
	}
}