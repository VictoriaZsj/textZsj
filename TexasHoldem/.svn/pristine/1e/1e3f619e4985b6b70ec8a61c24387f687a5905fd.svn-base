/**
 * 带有选项组件
 */
class TabComponent extends BaseComponent<Array<eui.Group>>
{

    public tabBar: eui.TabBar;
    public viewStack: eui.ViewStack;
    private disableTabIndex: number;
    public disableTabDes: string;
    private tabSkinName: string;

    public constructor()
    {
        super();
        this.disableTabIndex = -1;
        this.disableTabDes = "";
    }

    protected onAwake(event: eui.UIEvent)
    {
        super.onAwake(event);
        this.viewStack = new eui.ViewStack();
        this.tabBar = new eui.TabBar();
        this.tabBar.horizontalCenter = 0;
        this.viewStack.horizontalCenter = 0;
    }

    protected rendererStart(event: egret.Event)
    {
        super.rendererStart(event);

        for (let i = 0; i < this.bindData.length; i++)
        {
            this.viewStack.addChild(this.bindData[i]);
        }

        this.tabBar.dataProvider = this.viewStack;
        if (this.tabSkinName)
        {
            this.tabBar.itemRendererSkinName = this.tabSkinName;
        }
        else
        {
            this.tabBar.itemRendererSkinName = UIComponentSkinName.ButtonSkin2;
        }
        this.addChild(this.viewStack);
        this.addChild(this.tabBar);
    }

    protected onEnable(event: eui.UIEvent): void
    {
        super.onEnable(event);
        this.setEnterAnime();
        this.tabBar.addEventListener(egret.Event.CHANGING, this.disableChanging, this);
    }

    protected onDisable(event: eui.UIEvent): void
    {
        super.onDisable(event);
        egret.Tween.removeAllTweens();
        this.tabBar.removeEventListener(egret.Event.CHANGING, this.disableChanging, this);
    }
    /**
     * 禁用某个选项卡
     */
    public setDisableTabIndex(index: number)
    {
        this.disableTabIndex = index;
    }

    public setTabSkinName(name: string)
    {
        this.tabSkinName = name;
    }
    private disableChanging(event: egret.Event)
    {
        if (this.tabBar.selectedIndex == this.disableTabIndex)
        {
            event.preventDefault();
            AlertManager.showSingleAlertByString(this.disableTabDes);
        }
    }

    private setEnterAnime()
    {
        this.tabBar.scaleX = 0;
        this.tabBar.scaleY = 0;
        egret.Tween.get(this.tabBar).wait(100).to({scaleX:1,scaleY:1},200);
        this.viewStack.y = 1280;
        egret.Tween.get(this.viewStack).wait(200).to({y:-150},300);
    }
}