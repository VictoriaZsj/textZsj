/**
 * 会员管理
 */
class VipManager
{
    /**
    * vip时间变更事件
    */
    public static vipUpgrade: ActionDispatcher = new ActionDispatcher();

    /**
     * 计算vip等级
     */
    public static getVipLevel(vipExp: number): number
    {
        let vipLevelArray: Array<number> = ProjectDefined.GetInstance().getValue(ProjectDefined.vipLevel);
        for (let i = 0; i < vipLevelArray.length; i++)
        {
            if (vipExp > vipLevelArray[i])
            {
                continue;
            }
            return i;
        }
    }
    /**
     * 计算vip类型
     */
    public static getVipType(vipTime: number, yearVipTime: number): VipType
    {
        let serverTimeNow: number = TimeManager.GetServerUtcTimestamp();
        if (yearVipTime && yearVipTime > serverTimeNow)
        {
            return VipType.YearVip;
        }
        else if (vipTime && vipTime > serverTimeNow)
        {
            return VipType.Vip;
        }
        else
        {
            return VipType.NoVip;
        }
    }

    public static initialize(data: SpRpcResult)
    {
        SocketManager.RemoveCommandListener(Command.Rec_GetVipTime_2027, this.onGetVipTime);
        SocketManager.AddCommandListener(Command.Rec_GetVipTime_2027, this.onGetVipTime);

        VipManager.onGetVipTime(data);
    }

    private static onGetVipTime(result: SpRpcResult)
    {
        UserManager.userVipInfo.vipTime = parseInt(result.data["vipTime"]);
        UserManager.userVipInfo.yearVipTime = parseInt(result.data["yearVipTime"]);
        UserManager.userVipInfo.vipExp = parseInt(result.data["vipExp"]);

        UserManager.userVipInfo.vipType = VipManager.getVipType(UserManager.userVipInfo.vipTime, UserManager.userVipInfo.yearVipTime);
        UserManager.userVipInfo.vipLevel = VipManager.getVipLevel(UserManager.userVipInfo.vipExp);
        UserManager.userVipInfo.vipSpeed = ProjectDefined.GetInstance().getVipSpeedDefinition(UserManager.userVipInfo.vipType).speed;
        VipManager.vipUpgrade.dispatch();
    }

    /**
     * 获取vip到期时间
     */
    public static GetVipTime(): number
    {
        let serverTimeNow: number = TimeManager.GetServerUtcTimestamp();
        switch (UserManager.userVipInfo.vipType)
        {
            case VipType.NoVip:
                return 0;
            case VipType.YearVip:
                if (UserManager.userVipInfo.vipTime > serverTimeNow)
                {
                    return UserManager.userVipInfo.vipTime;
                }
                else
                {
                    return UserManager.userVipInfo.yearVipTime;
                }
            case VipType.Vip:
                return UserManager.userVipInfo.vipTime;
        }
    }
}

enum VipType
{
    NoVip = 0,
    Vip = 1,
    YearVip = 2,
}