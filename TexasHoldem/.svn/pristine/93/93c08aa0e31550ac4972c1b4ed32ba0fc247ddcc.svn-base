/**
 * 键盘面板
 */
class KeyBoardPanel extends BasePanel
{
    /**
     * 数字键盘按钮
    */
    public numBtn0: eui.Button;
    public numBtn1: eui.Button;
    public numBtn2: eui.Button;
    public numBtn3: eui.Button;
    public numBtn4: eui.Button;
    public numBtn5: eui.Button;
    public numBtn6: eui.Button;
    public numBtn7: eui.Button;
    public numBtn8: eui.Button;
    public numBtn9: eui.Button;
    public resetBtn: eui.Button;
    public delBtn: eui.Button;
    private _btnList: Array<eui.Button>;
    private keyboardGroup: eui.Group;
    /**
     * 键盘类型  数字键按下 type 1   删除 type 2  重输 type 3  关闭 type 4
    */
    private type: number
    public constructor()
    {
        super();
        this.skinName = UISkinName.KeyBoardPanel;
    }
    protected onAwake(event: eui.UIEvent)
    {
        super.onAwake(event);
        this.maskAlpha = 0.1;
        this.keyboardGroup.touchEnabled = true;
        this._btnList = new Array<eui.Button>();
        for (let i: number = 0; i <= 9; i++)
        {
            this._btnList.push(this["numBtn" + i.toString()]);
        }
    }
    public init(appendData: any)
    {
        super.init(appendData);
    }
    protected onRender(event: egret.Event)
    {
        super.onRender(event);
    }
    protected onEnable(event: eui.UIEvent): void
    {
        super.onEnable(event);
        this.keyboardGroup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.keyboardClickHandler, this);
    }
    protected onDisable(event: eui.UIEvent): void
    {
        super.onDisable(event);
        this.keyboardGroup.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.keyboardClickHandler, this);
    }
    /**
     * 数字键盘按钮事件处理
    */
    private keyboardClickHandler(event: egret.TouchEvent)
    {
        SoundManager.playButtonEffect(event.target);
        let index: number = this._btnList.indexOf(event.target);
        if (index >= 0)
        {
            this.type = 1;
            if (this.panelData.callback)
            {
                if (this.panelData.target)
                {
                    (this.panelData.callback as Function).call(this.panelData.target, this.type, index.toString());
                }
                else
                {
                    this.panelData.callback(this.type, index.toString());
                }
            }
        }
        else
        {
            switch (event.target)
            {
                case this.resetBtn:
                    this.type = 3;
                    break;
                case this.delBtn:
                    this.type = 2;
                    break;
                case this.keyboardGroup:
                    this.type = 4;
                    UIManager.closePanel(UIModuleName.KeyBoardPanel);
                    break;
            }
            if (this.panelData.callback)
            {
                if (this.panelData.target)
                {
                    (this.panelData.callback as Function).call(this.panelData.target, this.type);
                }
                else
                {
                    this.panelData.callback(this.type);
                }
            }
        }
    }
}