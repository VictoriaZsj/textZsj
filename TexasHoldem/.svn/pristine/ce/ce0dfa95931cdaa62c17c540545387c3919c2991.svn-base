/**
 * 游戏场管理
 */
class PlayingFieldManager
{
    /**
     * 房间信息列表
    */
    public static roomList: Array<PlayingFieldRoomInfo>;
    /**
     * 进入房间的id；
    */
    public static roomId: string;
    /**
	 * 发送房间信息获取请求
	 */
    public static reqRoomListInfo(type: number)
    {
        SocketManager.AddCommandListener(Command.Req_RoomInfo_3002, PlayingFieldManager.RoomListInfoResponse);
        SocketManager.Send(Command.Req_RoomInfo_3002, { "type": type });
    }
    public static RoomListInfoResponse(result: SpRpcResult)
    {
        SocketManager.RemoveCommandListener(Command.Req_RoomInfo_3002, PlayingFieldManager.RoomListInfoResponse);
        if (result.data)
        {
            let info: PlayingFieldRoomInfo = new PlayingFieldRoomInfo();
            let blindInfo: BlindDefinition = new BlindDefinition();
            for (let def of result.data["roomList"])
            {
                blindInfo = BlindDefined.GetInstance().getBlindInfoBysBlind(def.smallBlind);
                info.copyValueFrom(def);
                info["bigBlind"] = blindInfo.bBlind;
                info["minBuy"] = blindInfo.sBuyin;
                info["maxBuy"] = blindInfo.bBuyin;
                info["tax"] = blindInfo.tax;
                if (!PlayingFieldManager.roomList)
                {
                    PlayingFieldManager.roomList = new Array<PlayingFieldRoomInfo>();
                }
                PlayingFieldManager.roomList.push(info);
            }
        }
        PlayingFieldManager.onGetRoomListEvent.dispatch();
    }
    /**
	 * 请求房间列表事件
	 */
    public static onGetRoomListEvent: ActionDispatcher = new ActionDispatcher();
    /**
     * 直接关闭键盘事件
    */
    public static onCloseKeyboardEvent: ActionDispatcher = new ActionDispatcher();
}
/**
 * 赛事场房间信息
*/
class PlayingFieldRoomInfo extends BaseServerValueInfo
{
    /**
     * 模式
    */
    public pattern: number;
    /**
     * 房间Id
    */
    public id: number;
    /**
     * 房间玩家人数
    */
    public player: number;
    /**
     * 房间最大玩家人数
    */
    public maxPlayer: number;
    /**
     * 小盲
    */
    public smallBlind: number;
    /**
     * 大盲
    */
    public bigBlind: number;
    /**
     * 最小买入
    */
    public minBuy: number;
    /**
     * 最大买入
    */
    public maxBuy: number;
    /**
     * 税
    */
    public tax: number;
    /**
     * 房间类型
    */
    public type: number;

    public reset()
    {

    }
}